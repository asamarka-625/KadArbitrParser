# –í–Ω–µ—à–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import FSInputFile
import os
import json


router = Router()


@router.message(Command("download_log"))
async def download_log(message: types.Message):
    """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ log.log"""
    try:
        if not os.path.exists("log.log"):
            await message.answer("‚ùå –§–∞–π–ª log.log –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return

        log_file = FSInputFile("log.log", filename="log.log")
        await message.answer_document(log_file, caption="üìÑ –§–∞–π–ª –ª–æ–≥–æ–≤")

    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ª–æ–≥–æ–≤: {e}")


@router.message(Command("download_data"))
async def download_data(message: types.Message):
    """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ data.json"""
    try:
        if not os.path.exists("data.json"):
            sample_data = {
                "users": [],
                "settings": {},
                "statistics": {
                    "total_messages": 0,
                    "active_users": 0
                }
            }
            with open("data.json", "w", encoding="utf-8") as f:
                json.dump(sample_data, f, ensure_ascii=False, indent=2)

        data_file = FSInputFile("data.json", filename="data.json")
        await message.answer_document(data_file, caption="üìä –§–∞–π–ª –¥–∞–Ω–Ω—ã—Ö")

    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")


@router.message(Command("start"))
async def start_command(message: types.Message):
    """–ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç"""
    welcome_text = """
ü§ñ –ë–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
–ö–æ–º–∞–Ω–¥—ã:
/status - —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
/run_now - –∑–∞–ø—É—Å—Ç–∏—Ç—å –∑–∞–¥–∞—á—É —Å–µ–π—á–∞—Å
/tasks - —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
/stop_task NAME - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–¥–∞—á—É
/stop_all_tasks - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏
/download_log - —Å–∫–∞—á–∞—Ç—å –ª–æ–≥–∏
/download_data - —Å–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
/gis_key_view - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–ª—é—á 2GIS
/gis_key_update - –æ–±–Ω–æ–≤–∏—Ç—å –∫–ª—é—á 2GIS
/gis_key_used_update - –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–ª-–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –∫–ª—é—á–∞
"""
    await message.answer(welcome_text)